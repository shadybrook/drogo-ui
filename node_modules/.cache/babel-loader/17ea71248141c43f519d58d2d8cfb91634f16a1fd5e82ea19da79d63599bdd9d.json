{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[showAuthModal,setShowAuthModal]=useState(false);useEffect(()=>{// Check for existing user session in localStorage\nconst savedUser=localStorage.getItem('drogo_user');if(savedUser){try{const userData=JSON.parse(savedUser);setUser(userData);}catch(error){console.error('Error parsing saved user data:',error);localStorage.removeItem('drogo_user');}}setLoading(false);},[]);const signInWithGoogle=async()=>{try{setLoading(true);// Initialize Google Sign-In\nif(!window.google){throw new Error('Google Sign-In not loaded');}// Mock Google sign-in for demo purposes\n// In production, replace with actual Google OAuth implementation\nconst mockUser={id:'google_'+Date.now(),name:'Chintan Dedhia',email:'chintan@example.com',photoURL:'https://ui-avatars.com/api/?name=Chintan+Dedhia&background=00D67F&color=fff',provider:'google',createdAt:new Date().toISOString()};setUser(mockUser);localStorage.setItem('drogo_user',JSON.stringify(mockUser));setShowAuthModal(false);toast.success(\"Welcome, \".concat(mockUser.name,\"! \\uD83C\\uDF89\"));}catch(error){console.error('Google sign-in error:',error);toast.error('Failed to sign in with Google. Please try again.');}finally{setLoading(false);}};const signInWithEmail=async(email,password)=>{try{setLoading(true);// Mock email sign-in for demo purposes\n// In production, replace with actual authentication\nif(!email||!password){throw new Error('Email and password are required');}const mockUser={id:'email_'+Date.now(),name:email.split('@')[0],email:email,photoURL:\"https://ui-avatars.com/api/?name=\".concat(email.split('@')[0],\"&background=00D67F&color=fff\"),provider:'email',createdAt:new Date().toISOString()};setUser(mockUser);localStorage.setItem('drogo_user',JSON.stringify(mockUser));setShowAuthModal(false);toast.success(\"Welcome back, \".concat(mockUser.name,\"! \\uD83C\\uDF89\"));}catch(error){console.error('Email sign-in error:',error);toast.error('Invalid email or password. Please try again.');}finally{setLoading(false);}};const signUp=async(name,email,password)=>{try{setLoading(true);// Mock sign-up for demo purposes\n// In production, replace with actual user registration\nif(!name||!email||!password){throw new Error('All fields are required');}const newUser={id:'signup_'+Date.now(),name:name,email:email,photoURL:\"https://ui-avatars.com/api/?name=\".concat(name,\"&background=00D67F&color=fff\"),provider:'email',createdAt:new Date().toISOString()};setUser(newUser);localStorage.setItem('drogo_user',JSON.stringify(newUser));setShowAuthModal(false);toast.success(\"Account created successfully! Welcome, \".concat(newUser.name,\"! \\uD83C\\uDF89\"));}catch(error){console.error('Sign-up error:',error);toast.error('Failed to create account. Please try again.');}finally{setLoading(false);}};const signOut=async()=>{try{setUser(null);localStorage.removeItem('drogo_user');// Also clear cart and location data\nlocalStorage.removeItem('drogo_cart');localStorage.removeItem('drogo_location');toast.success('Signed out successfully! ðŸ‘‹');}catch(error){console.error('Sign-out error:',error);toast.error('Failed to sign out. Please try again.');}};const value={user,loading,showAuthModal,setShowAuthModal,signInWithGoogle,signInWithEmail,signUp,signOut};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsx","_jsx","AuthContext","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","loading","setLoading","showAuthModal","setShowAuthModal","savedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","signInWithGoogle","window","google","mockUser","id","Date","now","name","email","photoURL","provider","createdAt","toISOString","setItem","stringify","success","concat","signInWithEmail","password","split","signUp","newUser","signOut","value","Provider"],"sources":["/Users/chintandedhia/100xDevs/PropulsionTestData/Drogo_UI/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n\n  useEffect(() => {\n    // Check for existing user session in localStorage\n    const savedUser = localStorage.getItem('drogo_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        localStorage.removeItem('drogo_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const signInWithGoogle = async () => {\n    try {\n      setLoading(true);\n      \n      // Initialize Google Sign-In\n      if (!window.google) {\n        throw new Error('Google Sign-In not loaded');\n      }\n\n      // Mock Google sign-in for demo purposes\n      // In production, replace with actual Google OAuth implementation\n      const mockUser = {\n        id: 'google_' + Date.now(),\n        name: 'Chintan Dedhia',\n        email: 'chintan@example.com',\n        photoURL: 'https://ui-avatars.com/api/?name=Chintan+Dedhia&background=00D67F&color=fff',\n        provider: 'google',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Welcome, ${mockUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      toast.error('Failed to sign in with Google. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signInWithEmail = async (email, password) => {\n    try {\n      setLoading(true);\n      \n      // Mock email sign-in for demo purposes\n      // In production, replace with actual authentication\n      if (!email || !password) {\n        throw new Error('Email and password are required');\n      }\n\n      const mockUser = {\n        id: 'email_' + Date.now(),\n        name: email.split('@')[0],\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Welcome back, ${mockUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Email sign-in error:', error);\n      toast.error('Invalid email or password. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signUp = async (name, email, password) => {\n    try {\n      setLoading(true);\n      \n      // Mock sign-up for demo purposes\n      // In production, replace with actual user registration\n      if (!name || !email || !password) {\n        throw new Error('All fields are required');\n      }\n\n      const newUser = {\n        id: 'signup_' + Date.now(),\n        name: name,\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${name}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(newUser);\n      localStorage.setItem('drogo_user', JSON.stringify(newUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Account created successfully! Welcome, ${newUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Sign-up error:', error);\n      toast.error('Failed to create account. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('drogo_user');\n      \n      // Also clear cart and location data\n      localStorage.removeItem('drogo_cart');\n      localStorage.removeItem('drogo_location');\n      \n      toast.success('Signed out successfully! ðŸ‘‹');\n      \n    } catch (error) {\n      console.error('Sign-out error:', error);\n      toast.error('Failed to sign out. Please try again.');\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    showAuthModal,\n    setShowAuthModal,\n    signInWithGoogle,\n    signInWithEmail,\n    signUp,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}