{"ast":null,"code":"var _jsxFileName = \"/Users/chintandedhia/100xDevs/PropulsionTestData/Drogo_UI/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n  useEffect(() => {\n    // Check for existing user session in localStorage\n    const savedUser = localStorage.getItem('drogo_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        localStorage.removeItem('drogo_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const signInWithGoogle = async () => {\n    try {\n      setLoading(true);\n\n      // Initialize Google Sign-In\n      if (!window.google) {\n        throw new Error('Google Sign-In not loaded');\n      }\n\n      // Mock Google sign-in for demo purposes\n      // In production, replace with actual Google OAuth implementation\n      const mockUser = {\n        id: 'google_' + Date.now(),\n        name: 'Chintan Dedhia',\n        email: 'chintan@example.com',\n        photoURL: 'https://ui-avatars.com/api/?name=Chintan+Dedhia&background=00D67F&color=fff',\n        provider: 'google',\n        createdAt: new Date().toISOString()\n      };\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      toast.success(`Welcome, ${mockUser.name}! ðŸŽ‰`);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      toast.error('Failed to sign in with Google. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signInWithEmail = async (email, password) => {\n    try {\n      setLoading(true);\n\n      // Mock email sign-in for demo purposes\n      // In production, replace with actual authentication\n      if (!email || !password) {\n        throw new Error('Email and password are required');\n      }\n      const mockUser = {\n        id: 'email_' + Date.now(),\n        name: email.split('@')[0],\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      toast.success(`Welcome back, ${mockUser.name}! ðŸŽ‰`);\n    } catch (error) {\n      console.error('Email sign-in error:', error);\n      toast.error('Invalid email or password. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signUp = async (name, email, password) => {\n    try {\n      setLoading(true);\n\n      // Mock sign-up for demo purposes\n      // In production, replace with actual user registration\n      if (!name || !email || !password) {\n        throw new Error('All fields are required');\n      }\n      const newUser = {\n        id: 'signup_' + Date.now(),\n        name: name,\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${name}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n      setUser(newUser);\n      localStorage.setItem('drogo_user', JSON.stringify(newUser));\n      setShowAuthModal(false);\n      toast.success(`Account created successfully! Welcome, ${newUser.name}! ðŸŽ‰`);\n    } catch (error) {\n      console.error('Sign-up error:', error);\n      toast.error('Failed to create account. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const signOut = async () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('drogo_user');\n\n      // Also clear cart and location data\n      localStorage.removeItem('drogo_cart');\n      localStorage.removeItem('drogo_location');\n      toast.success('Signed out successfully! ðŸ‘‹');\n    } catch (error) {\n      console.error('Sign-out error:', error);\n      toast.error('Failed to sign out. Please try again.');\n    }\n  };\n  const value = {\n    user,\n    loading,\n    showAuthModal,\n    setShowAuthModal,\n    signInWithGoogle,\n    signInWithEmail,\n    signUp,\n    signOut\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"1flwCwVIhsbMNcFa7XOaU3bd67Q=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","showAuthModal","setShowAuthModal","savedUser","localStorage","getItem","userData","JSON","parse","error","console","removeItem","signInWithGoogle","window","google","mockUser","id","Date","now","name","email","photoURL","provider","createdAt","toISOString","setItem","stringify","success","signInWithEmail","password","split","signUp","newUser","signOut","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/chintandedhia/100xDevs/PropulsionTestData/Drogo_UI/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [showAuthModal, setShowAuthModal] = useState(false);\n\n  useEffect(() => {\n    // Check for existing user session in localStorage\n    const savedUser = localStorage.getItem('drogo_user');\n    if (savedUser) {\n      try {\n        const userData = JSON.parse(savedUser);\n        setUser(userData);\n      } catch (error) {\n        console.error('Error parsing saved user data:', error);\n        localStorage.removeItem('drogo_user');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const signInWithGoogle = async () => {\n    try {\n      setLoading(true);\n      \n      // Initialize Google Sign-In\n      if (!window.google) {\n        throw new Error('Google Sign-In not loaded');\n      }\n\n      // Mock Google sign-in for demo purposes\n      // In production, replace with actual Google OAuth implementation\n      const mockUser = {\n        id: 'google_' + Date.now(),\n        name: 'Chintan Dedhia',\n        email: 'chintan@example.com',\n        photoURL: 'https://ui-avatars.com/api/?name=Chintan+Dedhia&background=00D67F&color=fff',\n        provider: 'google',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Welcome, ${mockUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Google sign-in error:', error);\n      toast.error('Failed to sign in with Google. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signInWithEmail = async (email, password) => {\n    try {\n      setLoading(true);\n      \n      // Mock email sign-in for demo purposes\n      // In production, replace with actual authentication\n      if (!email || !password) {\n        throw new Error('Email and password are required');\n      }\n\n      const mockUser = {\n        id: 'email_' + Date.now(),\n        name: email.split('@')[0],\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${email.split('@')[0]}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(mockUser);\n      localStorage.setItem('drogo_user', JSON.stringify(mockUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Welcome back, ${mockUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Email sign-in error:', error);\n      toast.error('Invalid email or password. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signUp = async (name, email, password) => {\n    try {\n      setLoading(true);\n      \n      // Mock sign-up for demo purposes\n      // In production, replace with actual user registration\n      if (!name || !email || !password) {\n        throw new Error('All fields are required');\n      }\n\n      const newUser = {\n        id: 'signup_' + Date.now(),\n        name: name,\n        email: email,\n        photoURL: `https://ui-avatars.com/api/?name=${name}&background=00D67F&color=fff`,\n        provider: 'email',\n        createdAt: new Date().toISOString()\n      };\n\n      setUser(newUser);\n      localStorage.setItem('drogo_user', JSON.stringify(newUser));\n      setShowAuthModal(false);\n      \n      toast.success(`Account created successfully! Welcome, ${newUser.name}! ðŸŽ‰`);\n      \n    } catch (error) {\n      console.error('Sign-up error:', error);\n      toast.error('Failed to create account. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const signOut = async () => {\n    try {\n      setUser(null);\n      localStorage.removeItem('drogo_user');\n      \n      // Also clear cart and location data\n      localStorage.removeItem('drogo_cart');\n      localStorage.removeItem('drogo_location');\n      \n      toast.success('Signed out successfully! ðŸ‘‹');\n      \n    } catch (error) {\n      console.error('Sign-out error:', error);\n      toast.error('Failed to sign out. Please try again.');\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    showAuthModal,\n    setShowAuthModal,\n    signInWithGoogle,\n    signInWithEmail,\n    signUp,\n    signOut\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}